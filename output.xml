<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20180412 23:50:27.116" generator="Robot 3.0.3 (Python 2.7.14 on win32)">
<suite source="C:\Users\TimmyLin\Documents\ssh_robotframework_demo\ssh_demo.robot" id="s1" name="Ssh Demo">
<kw type="setup" name="Open Connection And Log In">
<kw name="Open Connection" library="SSHLibrary">
<doc>Opens a new SSH connection to the given `host` and `port`.</doc>
<arguments>
<arg>${HOST}</arg>
</arguments>
<status status="PASS" endtime="20180412 23:50:27.437" starttime="20180412 23:50:27.437"></status>
</kw>
<kw name="Login" library="SSHLibrary">
<doc>Logs into the SSH server with the given `username` and `password`.</doc>
<arguments>
<arg>${USERNAME}</arg>
<arg>${PASSWORD}</arg>
</arguments>
<msg timestamp="20180412 23:50:27.438" level="INFO">Logging into 'test.rebex.net:22' as 'demo'.</msg>
<msg timestamp="20180412 23:50:32.778" level="INFO">Read output: Welcome to Rebex Virtual Shell!
For a list of supported commands, type 'help'.
demo@ETNA:/$</msg>
<status status="PASS" endtime="20180412 23:50:32.778" starttime="20180412 23:50:27.438"></status>
</kw>
<status status="PASS" endtime="20180412 23:50:32.778" starttime="20180412 23:50:27.437"></status>
</kw>
<test id="s1-t1" name="Execute Command And Verify Output">
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>echo Hello SSHLibrary!</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20180412 23:50:32.779" level="INFO">Executing command 'echo Hello SSHLibrary!'.</msg>
<msg timestamp="20180412 23:50:33.406" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180412 23:50:33.406" level="INFO">${output} = Hello SSHLibrary!</msg>
<status status="PASS" endtime="20180412 23:50:33.406" starttime="20180412 23:50:32.779"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${output}</arg>
<arg>Hello SSHLibrary!</arg>
</arguments>
<status status="PASS" endtime="20180412 23:50:33.407" starttime="20180412 23:50:33.406"></status>
</kw>
<doc>Execute Command can be used to run commands on the remote machine.
The keyword returns the standard output by default.</doc>
<status status="PASS" endtime="20180412 23:50:33.407" critical="yes" starttime="20180412 23:50:32.778"></status>
</test>
<test id="s1-t2" name="Execute ls Command And Verify Output">
<kw name="Execute Command" library="SSHLibrary">
<doc>Executes `command` on the remote machine and returns its outputs.</doc>
<arguments>
<arg>ls</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<msg timestamp="20180412 23:50:33.410" level="INFO">Executing command 'ls'.</msg>
<msg timestamp="20180412 23:50:34.530" level="INFO">Command exited with return code 0.</msg>
<msg timestamp="20180412 23:50:34.530" level="INFO">${output} = aspnet_client
pub
readme.txt</msg>
<status status="PASS" endtime="20180412 23:50:34.530" starttime="20180412 23:50:33.410"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${output}</arg>
<arg>aspnet_client\npub\nreadme.txt</arg>
</arguments>
<status status="PASS" endtime="20180412 23:50:34.531" starttime="20180412 23:50:34.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20180412 23:50:34.532" level="INFO">aspnet_client
pub
readme.txt</msg>
<status status="PASS" endtime="20180412 23:50:34.532" starttime="20180412 23:50:34.531"></status>
</kw>
<status status="PASS" endtime="20180412 23:50:34.532" critical="yes" starttime="20180412 23:50:33.409"></status>
</test>
<kw type="teardown" name="Close All Connections" library="SSHLibrary">
<doc>Closes all open connections.</doc>
<status status="PASS" endtime="20180412 23:50:34.647" starttime="20180412 23:50:34.534"></status>
</kw>
<status status="PASS" endtime="20180412 23:50:34.647" starttime="20180412 23:50:27.119"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="2">Critical Tests</stat>
<stat fail="0" pass="2">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="Ssh Demo" pass="2">Ssh Demo</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
